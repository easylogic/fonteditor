
define(
    function (require) {

        var Font = require('ttf/font');

        describe('测试 Font 对象============================', function () {
            it('test create empty', function () {
                var font = Font.create();
                expect(font.data.version).toBe(1);
                expect(font.data.glyf.length).toBe(1);
            });

            it('test create by object', function () {
                var font = Font.create({
                    version: 1,
                    glyf: []
                });
                expect(font.data.version).toBe(1);
                expect(font.data.glyf.length).toBe(0);
            });
        });

        describe('读ttf数据', function () {
            var font = Font.create(require('data/baiduHealth.ttf'), {
                type: 'ttf'
            });
            it('test read ttf', function () {
                expect(font.data.version).toBe(1);
                expect(font.data.numTables).toBe(15);
            });
        });

        describe('转换compound到simple', function () {
            var font = Font.create(require('data/baiduHealth.ttf'), {
                type: 'ttf',
                compound2simple: true
            });
            it('test read ttf glyf', function () {
                expect(!!font.data.glyf[16].compound).toBe(false);
                expect(!!font.data.glyf[16].glyfs).toBe(false);
                expect(font.data.glyf[16].contours.length).toBe(4);
            });
        });

        describe('读otf数据', function () {
            var font = Font.create(require('data/BalladeContour.otf'), {
                type: 'otf'
            });
            it('test read otf', function () {
                expect(font.data.version).toBe(0x1);
                expect(font.data.numTables).toBe(9);
                expect(font.data.rengeShift).toBe(16);
                expect(font.data.searchRenge).toBe(128);
            });
        });

        describe('读取 woff 数据', function () {
            var buffer = Font.create(require('data/baiduHealth.ttf'), {
                type: 'ttf'
            }).write({
                type: 'woff'
            });
            var font = Font.create(buffer, {
                type: 'woff'
            });

            it('test read woff', function () {
                expect(font.data.version).toBe(1);
                expect(font.data.head.magickNumber).toBe(1594834165);
                expect(font.data.head.unitsPerEm).toBe(512);
            });
        });

        describe('读取 eot 数据', function () {
            var buffer = Font.create(require('data/baiduHealth.ttf'), {
                type: 'ttf'
            }).write({
                type: 'eot'
            });
            var font = Font.create(buffer, {
                type: 'eot'
            });

            it('test read eot', function () {
                expect(font.data.version).toBe(1);
                expect(font.data.head.magickNumber).toBe(1594834165);
                expect(font.data.head.unitsPerEm).toBe(512);
            });
        });

        describe('读取 svg 文件', function () {
            var font = Font.create(require('data/iconfont-xin.svg'), {
                type: 'svg'
            });
            it('test read svg', function () {
                expect(font.data.from).toBe('svg');
                expect(font.data.glyf.length).toBe(2);
                expect(font.data.glyf[0].contours.length).toBe(7);
                expect(font.data.glyf[1].contours.length).toBe(1);
            });
        });

        describe('读取 svg 字体', function () {
            var font = Font.create(require('data/icomoon.svg'), {
                type: 'svg'
            });
            it('test read svg font', function () {
                expect(font.data.from).toBe('svgfont');
                expect(font.data.id).toBe('icomoon');
                expect(font.data.name.fontFamily).toBe('icomoon');
                expect(font.data.metadata).toBe('Generated by IcoMoon');
            });

            it('test svg font glyf', function () {
                expect(font.data.glyf.length).toBe(3);
                expect(font.data.glyf[2].leftSideBearing).toBe(0);
                expect(font.data.glyf[2].advanceWidth).toBe(1024);
                expect(font.data.glyf[2].contours.length).toBe(7);
                expect(font.data.glyf[2].unicode[0]).toBe(57345);
            });
        });



        describe('写ttf数据', function () {

            it('test write ttf', function () {
               var buffer = Font.create(require('data/baiduHealth.ttf'), {
                    type: 'ttf'
                }).write();
                expect(buffer.byteLength).toBeGreaterThan(1000);
                expect(buffer.byteLength).toBeLessThan(10000);

                var font = Font.create(buffer, {
                    type: 'ttf'
                });
                expect(font.data.version).toBe(1);
                expect(font.data.head.magickNumber).toBe(1594834165);
                expect(font.data.head.unitsPerEm).toBe(512);
            });

            it('test write ttf hinting', function () {
                var buffer = Font.create(require('data/baiduHealth-hinting.ttf'), {
                    type: 'ttf',
                    hinting: true
                }).write({
                    hinting: true
                });
                expect(buffer.byteLength).toBeGreaterThan(1000);
                expect(buffer.byteLength).toBeLessThan(10000);

                var font = Font.create(buffer, {
                    type: 'ttf',
                    hinting: true
                });
                expect(font.data.cvt.length).toBe(24);
                expect(font.data.fpgm.length).toBe(371);
                expect(font.data.prep.length).toBe(204);
                expect(font.data.gasp.length).toBe(8);
            });
        });

        describe('写eot数据', function () {
            var buffer = Font.create(require('data/baiduHealth.ttf'), {
                type: 'ttf'
            }).write({
                type: 'eot'
            });
            it('test eot format', function () {
                expect(buffer.byteLength).toBeGreaterThan(1000);
                expect(buffer.byteLength).toBeLessThan(10000);
            });

            it('test read eot', function () {
                var font = Font.create(buffer, {
                    type: 'eot'
                });
                expect(font.data.version).toBe(1);
                expect(font.data.head.magickNumber).toBe(1594834165);
                expect(font.data.head.unitsPerEm).toBe(512);
            });
        });

        describe('写woff数据', function () {
            var buffer = Font.create(require('data/baiduHealth.ttf'), {
                type: 'ttf'
            }).write({
                type: 'woff'
            });
            it('test woff format', function () {
                expect(buffer.byteLength).toBeGreaterThan(1000);
                expect(buffer.byteLength).toBeLessThan(10000);
            });

            it('test read woff', function () {
                var font = Font.create(buffer, {
                    type: 'woff'
                });
                expect(font.data.version).toBe(1);
                expect(font.data.head.magickNumber).toBe(1594834165);
                expect(font.data.head.unitsPerEm).toBe(512);
            });
        });


        describe('写svg数据', function () {
            var font = Font.create(require('data/baiduHealth.ttf'), {
                type: 'ttf'
            })
            var svg = font.write({
                type: 'svg'
            });
            it('test svg format', function () {
                expect(svg.length).toBeGreaterThan(1000);
            });
            var symbol = font.write({
                type: 'symbol'
            })
            it('test symbol format', function () {
                expect(symbol.length).toBeGreaterThan(1000);
            });

        });

        describe('toBase64', function () {
            it('test ttf to toBase64', function () {
                var base64Str = Font.create(require('data/baiduHealth.ttf'), {
                    type: 'ttf'
                }).toBase64({
                    type: 'ttf'
                });
                expect(base64Str.indexOf('data:font/ttf;'))
                    .toBe(0);
                expect(base64Str.length).toBeGreaterThan(1000);
                expect(base64Str.length).toBeLessThan(10000);
            });

            it('test woff to toBase64', function () {
                var base64Str = Font.create(require('data/baiduHealth.ttf'), {
                    type: 'ttf'
                }).toBase64({
                    type: 'woff'
                });
                expect(base64Str.indexOf('data:font/woff;'))
                    .toBe(0);
                expect(base64Str.length).toBeGreaterThan(1000);
                expect(base64Str.length).toBeLessThan(10000);
            });

            it('test eot to toBase64', function () {
                var base64Str = Font.create(require('data/baiduHealth.ttf'), {
                    type: 'ttf'
                }).toBase64({
                    type: 'eot'
                });
                expect(base64Str.indexOf('data:font/eot;'))
                    .toBe(0);
                expect(base64Str.length).toBeGreaterThan(1000);
                expect(base64Str.length).toBeLessThan(10000);
            });

            it('test svg to toBase64', function () {
                var base64Str = Font.create(require('data/baiduHealth.ttf'), {
                    type: 'ttf'
                }).toBase64({
                    type: 'svg'
                });
                expect(base64Str.indexOf('data:font/svg;'))
                    .toBe(0);
                expect(base64Str.length).toBeGreaterThan(1000);
                expect(base64Str.length).toBeLessThan(20000);
            });

            it('test svg symbol to toBase64', function () {
                var base64Str = Font.create(require('data/baiduHealth.ttf'), {
                    type: 'ttf'
                }).toBase64({
                    type: 'symbol'
                });
                expect(base64Str.indexOf('data:image/svg+xml;'))
                    .toBe(0);
                expect(base64Str.length).toBeGreaterThan(1000);
            });

        });

        describe('font method', function () {
            it('compound2simple', function () {
                var font = Font.create(require('data/baiduHealth.ttf'), {
                    type: 'ttf'
                });
                font.compound2simple();
                expect(!!font.data.glyf[16].compound).toBe(false);
                expect(!!font.data.glyf[16].glyfs).toBe(false);
                expect(font.data.glyf[16].contours.length).toBe(4);
            });

            it('optimize', function () {
                var font = Font.create(require('data/baiduHealth.ttf'), {
                    type: 'ttf'
                });
                font.compound2simple()
                expect(font.data.glyf.length).toBe(17);
                font.optimize();
                expect(font.data.glyf.length).toBe(15);
            });

            it('sort', function () {
                var font = Font.create(require('data/baiduHealth.ttf'), {
                    type: 'ttf'
                });
                font.sort();
                expect(font.data.glyf[2].unicode).toBeUndefined();
                font.compound2simple().sort();
                expect(font.data.glyf[3].unicode[0]).toBe(0xe003);
            });

            it('find', function () {
                var font = Font.create(require('data/baiduHealth.ttf'), {
                    type: 'ttf'
                });
                var list = font.find({
                    unicode: 0xe003
                });
                expect(list.length).toBe(1);
                expect(list[0].unicode[0]).toBe(0xe003);

                var list = font.find({
                    name: 'uniE00'
                });
                expect(list.length).toBe(4);

                var list = font.find({
                    filter: function (glyf) {
                        return glyf.name === 'uniE003';
                    }
                });
                expect(list.length).toBe(1);
            });

            it('merge', function () {
                var font = Font.create(require('data/baiduHealth.ttf'), {
                    type: 'ttf'
                });
                var font1 = Font.create(require('data/icomoon.svg'), {
                    type: 'svg'
                });
                font1.optimize();
                expect(font.data.glyf.length).toBe(17);
                expect(font1.data.glyf.length).toBe(2);
                font.merge(font1);
                expect(font.data.glyf.length).toBe(18);
            });

            it('toBase64', function () {
                var str = Font.toBase64('abcd');
                expect(str).toBe('YWJjZA==');

                var buffer = new Int8Array([65, 66, 67]);
                var str = Font.toBase64(buffer);
                expect(str).toBe('QUJD');

                var str = Font.toBase64(buffer.buffer);
                expect(str).toBe('QUJD');
            });

        });

    }
);
